{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","src","photoURL","alt","displayName","TooltipBox","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarkBorderIcon","PeopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","App","AppLoading","AppLoadingContents","color","fadeIn","AppBody","path","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.924a7f34.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDFRLfLVkTPZWiCPxh0BBeJtHPgn37fMA0\",\n  authDomain: \"stockbreakers-dd607.firebaseapp.com\",\n  projectId: \"stockbreakers-dd607\",\n  storageBucket: \"stockbreakers-dd607.appspot.com\",\n  messagingSenderId: \"954355323637\",\n  appId: \"1:954355323637:web:cee837d2ee053269d2abbc\",\n  measurementId: \"G-00NZDTTDBF\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider()\n\nexport { auth, provider, db }","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Avatar } from \"@material-ui/core\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport { auth } from \"../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nfunction Header() {\n  const [user] = useAuthState(auth);\n\n  return (\n    <HeaderContainer>\n      <HeaderLeft>\n        \n          <HeaderAvatar\n            onClick={() => auth.signOut()} //Anon function to signout onClick\n            src={user?.photoURL}\n            alt={user?.displayName}\n          />\n          <TooltipBox>Log Out</TooltipBox>\n\n        <AccessTimeIcon />\n      </HeaderLeft>\n      <HeaderSearch>\n        <SearchIcon />\n        <input placeholder=\"Search\" />\n      </HeaderSearch>\n\n      <HeaderRight>\n        <HelpOutlineIcon />\n      </HeaderRight>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  position: fixed;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 0;\n  background-color: var(--slack-color);\n  color: white;\n  \n  \n`;\n\nconst HeaderAvatar = styled(Avatar)`\n  cursor: pointer;\n  :hover {\n    opacity: 0.8; /*  */\n  }\n`;\n\nconst HeaderSearch = styled.div`\n  flex: 0.4;\n  opacity: 1;\n  border-radius: 6px;\n  text-align: center;\n  display: flex;\n  padding: 0 50px;\n  color: gray;\n  border: 1px gray solid;\n\n  > input {\n    background-color: transparent; /* Looks better, blends into background */\n    border: none;\n    text-align: center;\n    min-width: 30vw; /* Minimum reactive width is 30% of screen */\n    outline: 0; /* Gets rid of the input outline */\n    color: white; /* Color of text is white */\n  }\n`;\n\nconst HeaderRight = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: flex-end;\n\n  > .MuiSvgIcon-root {\n    /* This is how you target Material-UI Icons */\n    margin-left: auto;\n    margin-right: 20px;\n    cursor: pointer;\n    :hover {\n      opacity: 0.8;\n    }\n  }\n`;\n\n\nconst TooltipBox = styled.div`\n  color: cyan;\n  text-align: center;\n  background-color: rgba(0, 0, 0, 0.15);\n  width: 70px;\n  padding: 2px;\n  height: 20px;\n  border-radius: 2px;\n  font-size: 12px;\n  margin-left: 10px;\n\n  visibility: hidden;\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n\n  > .MuiSvgIcon-root {\n    margin-left: auto;\n    margin-right: 30px;\n    :hover {\n      opacity: 0.8;\n    }\n  }\n  \n  & ${HeaderAvatar}:hover + ${TooltipBox} {\n    visibility: visible;\n  }\n`;\n\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => {\r\n      state.roomId = action.payload.roomId;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { db } from \"../firebase\";\nimport { enterRoom } from \"../features/appSlice\";\nimport { useDispatch } from \"react-redux\";\n\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\n  const dispatch = useDispatch();\n\n  const addChannel = () => {\n    const channelName = prompt(\"Please enter the channel name\");\n\n    if (channelName) {\n      db.collection(\"rooms\").add({\n        name: channelName,\n      });\n    }\n  };\n  const selectChannel = () => {\n    if (id) {\n      dispatch(\n        enterRoom({\n          roomId: id,\n        })\n      );\n    }\n  };\n\n  return (\n    <SidebarOptionContainer\n      onClick={\n        addChannelOption ? addChannel : selectChannel\n      } /* Different onclicks for the same component */\n    >\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\n      {Icon ? (\n        <h3>{title}</h3>\n      ) : (\n        <SidebarOptionChannel>\n          <span>#</span> {title}\n        </SidebarOptionChannel>\n      )}\n    </SidebarOptionContainer>\n  );\n}\n\nexport default SidebarOption;\n\nconst SidebarOptionContainer = styled.div`\n  /* Has two props, an icon and the title. */\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  padding-left: 2px;\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.9;\n    background-color: #340e36; /* Background color of the whole element */\n  }\n\n  > h3 {\n    font-weight: 500;\n  }\n\n  > h3 > span {\n    /* Styles the span tag inside h3 tags */\n    padding: 15px;\n  }\n`;\n\nconst SidebarOptionChannel = styled.h3`\n  padding: 10px 0;\n  font-weight: 300;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\n\n/* COMPONENTS */\nimport SidebarOption from \"./SidebarOption\";\nimport { auth, db } from \"../firebase\";\n\n/* ICONS */\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nfunction Sidebar() {\n  const [channels, loading, error] = useCollection(db.collection(\"rooms\"));\n  const [user] = useAuthState(auth);\n\n  return (\n    <SidebarContainer>\n      <SidebarHeader>\n        <SidebarInfo>\n          <h2>Hello {user?.displayName}</h2>\n          <h3>\n            <FiberManualRecordIcon />\n            {user?.displayName}\n          </h3>\n        </SidebarInfo>\n\n        <CreateIcon />\n      </SidebarHeader>\n      <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n      <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\n      <SidebarOption Icon={DraftsIcon} title=\"Saved items\" />\n      <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\n      <SidebarOption Icon={PeopleAltIcon} title=\"People & user groups\" />\n      <SidebarOption Icon={AppsIcon} title=\"Apps\" />\n      <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\n      <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\n      <hr /> {/* Horizontal line */}\n      <SidebarOption Icon={ExpandMoreIcon} title=\"Show More\" />\n      <hr />\n      <SidebarOption Icon={AddIcon} title=\"Add Channel\" addChannelOption />\n      {channels?.docs.map((doc) => (\n        <SidebarOption key={doc.id} id={doc.id} title={doc.data().name} />\n      ))}\n    </SidebarContainer>\n  );\n}\n\nexport default Sidebar;\n\nconst SidebarContainer = styled.div`\n  background-color: var(--slack-color);\n  color: white;\n  flex: 0.3;\n  max-width: 260px;\n  margin-top: 60px;\n\n  > hr {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #49274b;\n  }\n`;\n\nconst SidebarHeader = styled.div`\n  display: flex;\n  border-bottom: 1px solid #49274b;\n  padding-bottom: 10px;\n  padding: 13px;\n\n  > .MuiSvgIcon-root {\n    padding: 8px; /* Makes the area around the icon larger, to make it look like a square button with an icon in the middle */\n    color: #42974b; /* color of the icon */\n    font-size: 18px; /* Size of the icon */\n    background-color: white; /* Colour of the icon background */\n    border-radius: 999px; /* Makes the element a circle */\n  }\n`;\n\nconst SidebarInfo = styled.div`\n  flex: 1;\n  > h2 {\n    /* Targets all h2 tags in the SidebarInfo Div */\n    font-size: 15px;\n    font-weight: 900;\n    margin-bottom: 5px;\n  }\n  > h3 {\n    /* Targets all h3 tags in the SidebarInfor Div */\n    display: flex; /* Display type flex, used so we can use align-items center */\n    font-size: 12px; /* Font size */\n    font-weight: 400; /* Thickness of text */\n    align-items: center; /* Very useful to align icons with text. */\n  }\n\n  > h3 > .MuiSvgIcon-root {\n    /* Targets all icons within an h3 tag in the SidebarInfo Div */\n    font-size: 14;\n    margin-top: 2px;\n    margin-right: 2px;\n    color: green;\n  }\n`;\n","import { Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { auth, db } from \"../firebase\";\nimport firebase from \"firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nfunction ChatInput({ channelName, channelId, chatRef }) {\n  const [user] = useAuthState(auth);\n  const [input, setInput] = useState(\"\");\n\n  const sendMessage = (e) => {\n    e.preventDefault(); //Prevents refresh\n    if (!channelId) {\n      return false;\n    }\n\n    db.collection(\"rooms\").doc(channelId).collection(\"messages\").add({\n      message: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      user: user.displayName,\n      userImage: user.photoURL,\n    });\n\n    chatRef.current.scrollIntoView({ behavior: \"smooth\" });\n\n    setInput(\"\"); //Sets the input to empty after sending the message\n  };\n\n  return (\n    <ChatInputContainer>\n      <form>\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder={`Message #${channelName}`}\n        />\n        <Button hidden type=\"submit\" onClick={sendMessage}>\n          {\" \"}\n          {/* When you have a button in a form with type submit, hitting enter submits the form */}\n          SEND\n        </Button>\n      </form>\n    </ChatInputContainer>\n  );\n}\n\nexport default ChatInput;\n\nconst ChatInputContainer = styled.div`\n  border-radius: 20px;\n\n  > form {\n    position: relative;\n    display: flex;\n    justify-content: center;\n  }\n\n  > form > input {\n    position: fixed; /* Fixed, scrolling doesnt effect it. */\n    bottom: 30px; /* Drops it to 30px from the bottom */\n    width: 60%;\n    border: 1px solid gray;\n    border-radius: 3px;\n    padding: 20px;\n    outline: none;\n  }\n\n  > form > button {\n    display: none !important; /* Dont display the button, but enter triggers the onClick function */\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Message({ message, timestamp, user, userImage }) {\n\n  return (\n    <MessageContainer>\n      <img src={userImage} alt=\"\" />\n      <MessageInfo>\n        <h4>\n          {user} <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\n        </h4>\n        <p>{message}</p>\n      </MessageInfo>\n    </MessageContainer>\n  );\n}\n\nexport default Message;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 20px;\n\n  > img {\n    height: 50px;\n    border-radius: 8px;\n  }\n`;\n\nconst MessageInfo = styled.div`\n  padding-left: 10px;\n\n  > h4 > span {\n    color: gray;\n    font-weight: 300;\n    margin-left: 4px;\n    font-size: 10px;\n  }\n`;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport StarBorderOutlinedIcon from \"@material-ui/icons/StarBorderOutlined\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\nimport { useSelector } from \"react-redux\";\nimport { selectRoomId } from \"../features/appSlice\";\nimport ChatInput from \"./ChatInput\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\n\nfunction Chat() {\n  const chatRef = useRef(null);\n  const roomId = useSelector(selectRoomId);\n  const [roomDetails] = useDocument(\n    roomId && db.collection(\"rooms\").doc(roomId)\n  );\n  const [roomMessages, loading] = useCollection(\n    roomId &&\n      db\n        .collection(\"rooms\")\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n  );\n\n    useEffect(() => { //useEffects runs a bit of code when it mounts\n        chatRef?.current?.scrollIntoView({behavior:\"smooth\",});\n    }, [roomId, loading]) /* If a new room is loading, refire the code */\n\n  return (\n    <ChatContainer>\n        {roomId && roomDetails && ( \n            <>\n            <Header>\n              <HeaderLeft>\n                <h4>\n                  <strong>#{roomDetails?.data().name}</strong>\n                </h4>\n                <StarBorderOutlinedIcon />\n              </HeaderLeft>\n    \n              <HeaderRight>\n                <p>\n                  <InfoOutlinedIcon /> Details\n                </p>\n              </HeaderRight>\n            </Header>\n    \n            <ChatMessages>\n              {roomMessages?.docs.map((doc) => {\n                const { message, timestamp, user, userImage } = doc.data();\n    \n                return (\n                  <Message\n                    key={doc.id}\n                    message={message}\n                    timestamp={timestamp}\n                    user={user}\n                    userImage={userImage}\n                  />\n                );\n              })}\n              <ChatBottom ref={chatRef} />\n            </ChatMessages>\n    \n            <ChatInput chatRef={chatRef} channelName={roomDetails?.data().name} channelId={roomId} />\n          </>\n        )}\n      \n    </ChatContainer>\n  );\n}\n\nexport default Chat;\n\nconst ChatContainer = styled.div`\n  flex: 0.7;\n  flex-grow: 1;\n  overflow-y: scroll;\n  margin-top: 60px;\n`;\n\nconst ChatMessages = styled.div``;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n  > h4 {\n    display: flex;\n    text-transform: lowercase; /* Makes everyting lowercase */\n    margin-right: 10px;\n  }\n\n  > h4 > .MuiSvgIcon-root {\n    font-size: 18px;\n  }\n`;\n\nconst HeaderRight = styled.div`\n  > p {\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n  }\n\n  > p > .MuiSvgIcon-root {\n    margin-right: 5px !important;\n    font-size: 16px;\n  }\n`;\n\nconst ChatBottom = styled.div`\n  padding: 80px;\n`;\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { auth, provider } from \"../firebase\";\n\nfunction Login() {\n  const signIn = (e) => {\n    e.preventDefault();\n    auth.signInWithPopup(provider).catch((error) => \n    alert(error.message));\n  };\n  \n  return (\n    <LoginContainer>\n      <LoginInnerContainer>\n        <img\n          src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"\n          alt=\"\"\n        />\n        <h1>Sign in to the App</h1>\n        <p>app.slack.com</p>\n\n        <Button onClick={signIn}>\n          Sign in with Google\n        </Button>\n      </LoginInnerContainer>\n    </LoginContainer>\n  );\n}\n\nexport default Login;\n\nconst LoginContainer = styled.div`\n  background-color: #f8f8f8;\n  height: 100vh;\n  display: grid;\n  place-items: center;\n`;\n\nconst LoginInnerContainer = styled.div`\n  padding: 100px;\n  text-align: center;\n  background-color: white;\n  border-radius: 10px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n\n  > img {\n    height: 100px;\n    object-fit: contain;\n    margin-bottom: 40px;\n  }\n\n  > button {\n    margin-top: 50px;\n    text-transform: inherit !important;\n    background-color: #0a8d48 !important;\n    color: white;\n  }\n`;\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport styled from \"styled-components\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Chat from \"./components/Chat\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"./firebase\";\r\nimport Login from \"./components/Login\";\r\nimport Spinner from \"react-spinkit\";\r\n\r\nfunction App() {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if (loading) {\r\n    return (\r\n      <AppLoading>\r\n        <AppLoadingContents>\r\n          <img\r\n            src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\"\r\n            alt=\"\"\r\n          />\r\n\r\n          <Spinner name=\"ball-spin-fade-loader\" color=\"purple\" fadeIn=\"none\" />\r\n        </AppLoadingContents>\r\n      </AppLoading>\r\n    );\r\n  }\r\n  return (\r\n    <Router>\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <>\r\n          <Header />\r\n          <AppBody>\r\n            <Sidebar />\r\n            <Switch>\r\n              <Route path=\"/\">\r\n                <Chat />\r\n              </Route>\r\n            </Switch>\r\n          </AppBody>\r\n        </>\r\n      )}\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n`;\r\n\r\nconst AppLoading = styled.div`\r\n  display: grid;\r\n  place-items: center;\r\n  height: 100vh;\r\n  width: 100%;\r\n`;\r\n\r\nconst AppLoadingContents = styled.div`\r\n  text-align: center;\r\n  padding-bottom: 100px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  > img {\r\n    height: 100px;\r\n    padding: 20px;\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport appReducer from \"../features/appSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}